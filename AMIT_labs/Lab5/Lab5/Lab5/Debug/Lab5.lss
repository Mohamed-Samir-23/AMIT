
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000314  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000388  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b35  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c1  00000000  00000000  00000ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000525  00000000  00000000  000016b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00001bd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000499  00000000  00000000  00001d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ad7  00000000  00000000  000021d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002cb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 48 01 	call	0x290	; 0x290 <main>
  74:	0c 94 88 01 	jmp	0x310	; 0x310 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_udtSetPinDirection>:
	unit8 u8Pin,
	unit8 u8Direction
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
	if(u8Direction==DIO_OUTPUT)
  7c:	41 30       	cpi	r20, 0x01	; 1
  7e:	c1 f5       	brne	.+112    	; 0xf0 <DIO_udtSetPinDirection+0x74>
	{
		switch(u8Port)
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	91 f0       	breq	.+36     	; 0xa8 <DIO_udtSetPinDirection+0x2c>
  84:	28 f0       	brcs	.+10     	; 0x90 <DIO_udtSetPinDirection+0x14>
  86:	82 30       	cpi	r24, 0x02	; 2
  88:	d9 f0       	breq	.+54     	; 0xc0 <DIO_udtSetPinDirection+0x44>
  8a:	83 30       	cpi	r24, 0x03	; 3
  8c:	29 f1       	breq	.+74     	; 0xd8 <DIO_udtSetPinDirection+0x5c>
  8e:	6e c0       	rjmp	.+220    	; 0x16c <DIO_udtSetPinDirection+0xf0>
		{
			case DIO_PORTA:SET_BIT(DIO->DDRA, u8Pin);udtReturnType=E_OK;break;
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	02 c0       	rjmp	.+4      	; 0x9a <DIO_udtSetPinDirection+0x1e>
  96:	88 0f       	add	r24, r24
  98:	99 1f       	adc	r25, r25
  9a:	6a 95       	dec	r22
  9c:	e2 f7       	brpl	.-8      	; 0x96 <DIO_udtSetPinDirection+0x1a>
  9e:	9a b3       	in	r25, 0x1a	; 26
  a0:	89 2b       	or	r24, r25
  a2:	8a bb       	out	0x1a, r24	; 26
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	08 95       	ret
			case DIO_PORTB:SET_BIT(DIO->DDRB, u8Pin);udtReturnType=E_OK;break;
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_udtSetPinDirection+0x36>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_udtSetPinDirection+0x32>
  b6:	97 b3       	in	r25, 0x17	; 23
  b8:	89 2b       	or	r24, r25
  ba:	87 bb       	out	0x17, r24	; 23
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	08 95       	ret
			case DIO_PORTC:SET_BIT(DIO->DDRC, u8Pin);udtReturnType=E_OK;break;
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <DIO_udtSetPinDirection+0x4e>
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	6a 95       	dec	r22
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <DIO_udtSetPinDirection+0x4a>
  ce:	94 b3       	in	r25, 0x14	; 20
  d0:	89 2b       	or	r24, r25
  d2:	84 bb       	out	0x14, r24	; 20
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	08 95       	ret
			case DIO_PORTD:SET_BIT(DIO->DDRD, u8Pin);udtReturnType=E_OK;break;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_udtSetPinDirection+0x66>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_udtSetPinDirection+0x62>
  e6:	91 b3       	in	r25, 0x11	; 17
  e8:	89 2b       	or	r24, r25
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret
			default:/*!Comment: DO nothing*/break;
		}
		
	}
	else if(u8Direction==DIO_INPUT)
  f0:	41 11       	cpse	r20, r1
  f2:	3e c0       	rjmp	.+124    	; 0x170 <DIO_udtSetPinDirection+0xf4>
	{
		switch(u8Port)
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	99 f0       	breq	.+38     	; 0x11e <DIO_udtSetPinDirection+0xa2>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_udtSetPinDirection+0x88>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	e9 f0       	breq	.+58     	; 0x138 <DIO_udtSetPinDirection+0xbc>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	41 f1       	breq	.+80     	; 0x152 <DIO_udtSetPinDirection+0xd6>
 102:	38 c0       	rjmp	.+112    	; 0x174 <DIO_udtSetPinDirection+0xf8>
		{
			case DIO_PORTA:CLR_BIT(DIO->DDRA, u8Pin);udtReturnType=E_OK;break;
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_udtSetPinDirection+0x92>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_udtSetPinDirection+0x8e>
 112:	80 95       	com	r24
 114:	9a b3       	in	r25, 0x1a	; 26
 116:	89 23       	and	r24, r25
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	08 95       	ret
			case DIO_PORTB:CLR_BIT(DIO->DDRB, u8Pin);udtReturnType=E_OK;break;
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_udtSetPinDirection+0xac>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_udtSetPinDirection+0xa8>
 12c:	80 95       	com	r24
 12e:	97 b3       	in	r25, 0x17	; 23
 130:	89 23       	and	r24, r25
 132:	87 bb       	out	0x17, r24	; 23
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	08 95       	ret
			case DIO_PORTC:CLR_BIT(DIO->DDRC, u8Pin);udtReturnType=E_OK;break;
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_udtSetPinDirection+0xc6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_udtSetPinDirection+0xc2>
 146:	80 95       	com	r24
 148:	94 b3       	in	r25, 0x14	; 20
 14a:	89 23       	and	r24, r25
 14c:	84 bb       	out	0x14, r24	; 20
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	08 95       	ret
			case DIO_PORTD:CLR_BIT(DIO->DDRD, u8Pin);udtReturnType=E_OK;break;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_udtSetPinDirection+0xe0>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <DIO_udtSetPinDirection+0xdc>
 160:	80 95       	com	r24
 162:	91 b3       	in	r25, 0x11	; 17
 164:	89 23       	and	r24, r25
 166:	81 bb       	out	0x11, r24	; 17
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	08 95       	ret
	unit8 u8Port,
	unit8 u8Pin,
	unit8 u8Direction
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	08 95       	ret
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	08 95       	ret
 174:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		/*!Comment: DO nothing*/
	}
	return udtReturnType;
} 
 176:	08 95       	ret

00000178 <DIO_udtSetPinValue>:
	unit8 u8Pin,
	unit8 u8Value
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
	if(u8Value==DIO_HIGH)
 178:	41 30       	cpi	r20, 0x01	; 1
 17a:	c1 f5       	brne	.+112    	; 0x1ec <DIO_udtSetPinValue+0x74>
	{
		switch(u8Port)
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	91 f0       	breq	.+36     	; 0x1a4 <DIO_udtSetPinValue+0x2c>
 180:	28 f0       	brcs	.+10     	; 0x18c <DIO_udtSetPinValue+0x14>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	d9 f0       	breq	.+54     	; 0x1bc <DIO_udtSetPinValue+0x44>
 186:	83 30       	cpi	r24, 0x03	; 3
 188:	29 f1       	breq	.+74     	; 0x1d4 <DIO_udtSetPinValue+0x5c>
 18a:	6e c0       	rjmp	.+220    	; 0x268 <DIO_udtSetPinValue+0xf0>
		{
			case DIO_PORTA:SET_BIT(DIO->PORTA, u8Pin);udtReturnType=E_OK;break;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_udtSetPinValue+0x1e>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_udtSetPinValue+0x1a>
 19a:	9b b3       	in	r25, 0x1b	; 27
 19c:	89 2b       	or	r24, r25
 19e:	8b bb       	out	0x1b, r24	; 27
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	08 95       	ret
			case DIO_PORTB:SET_BIT(DIO->PORTB, u8Pin);udtReturnType=E_OK;break;
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_udtSetPinValue+0x36>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_udtSetPinValue+0x32>
 1b2:	98 b3       	in	r25, 0x18	; 24
 1b4:	89 2b       	or	r24, r25
 1b6:	88 bb       	out	0x18, r24	; 24
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	08 95       	ret
			case DIO_PORTC:SET_BIT(DIO->PORTC, u8Pin);udtReturnType=E_OK;break;
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_udtSetPinValue+0x4e>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_udtSetPinValue+0x4a>
 1ca:	95 b3       	in	r25, 0x15	; 21
 1cc:	89 2b       	or	r24, r25
 1ce:	85 bb       	out	0x15, r24	; 21
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	08 95       	ret
			case DIO_PORTD:SET_BIT(DIO->PORTD, u8Pin);udtReturnType=E_OK;break;
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_udtSetPinValue+0x66>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_udtSetPinValue+0x62>
 1e2:	92 b3       	in	r25, 0x12	; 18
 1e4:	89 2b       	or	r24, r25
 1e6:	82 bb       	out	0x12, r24	; 18
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	08 95       	ret
			default:/*!Comment: DO nothing*/break;
		}
		
	}
	else if(u8Value==DIO_LOW)
 1ec:	41 11       	cpse	r20, r1
 1ee:	3e c0       	rjmp	.+124    	; 0x26c <DIO_udtSetPinValue+0xf4>
	{
		switch(u8Port)
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	99 f0       	breq	.+38     	; 0x21a <DIO_udtSetPinValue+0xa2>
 1f4:	28 f0       	brcs	.+10     	; 0x200 <DIO_udtSetPinValue+0x88>
 1f6:	82 30       	cpi	r24, 0x02	; 2
 1f8:	e9 f0       	breq	.+58     	; 0x234 <DIO_udtSetPinValue+0xbc>
 1fa:	83 30       	cpi	r24, 0x03	; 3
 1fc:	41 f1       	breq	.+80     	; 0x24e <DIO_udtSetPinValue+0xd6>
 1fe:	38 c0       	rjmp	.+112    	; 0x270 <DIO_udtSetPinValue+0xf8>
		{
			case DIO_PORTA:CLR_BIT(DIO->PORTA, u8Pin);udtReturnType=E_OK;break;
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_udtSetPinValue+0x92>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_udtSetPinValue+0x8e>
 20e:	80 95       	com	r24
 210:	9b b3       	in	r25, 0x1b	; 27
 212:	89 23       	and	r24, r25
 214:	8b bb       	out	0x1b, r24	; 27
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	08 95       	ret
			case DIO_PORTB:CLR_BIT(DIO->PORTB, u8Pin);udtReturnType=E_OK;break;
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_udtSetPinValue+0xac>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_udtSetPinValue+0xa8>
 228:	80 95       	com	r24
 22a:	98 b3       	in	r25, 0x18	; 24
 22c:	89 23       	and	r24, r25
 22e:	88 bb       	out	0x18, r24	; 24
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	08 95       	ret
			case DIO_PORTC:CLR_BIT(DIO->PORTC, u8Pin);udtReturnType=E_OK;break;
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_udtSetPinValue+0xc6>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_udtSetPinValue+0xc2>
 242:	80 95       	com	r24
 244:	95 b3       	in	r25, 0x15	; 21
 246:	89 23       	and	r24, r25
 248:	85 bb       	out	0x15, r24	; 21
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	08 95       	ret
			case DIO_PORTD:CLR_BIT(DIO->PORTD, u8Pin);udtReturnType=E_OK;break;
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_udtSetPinValue+0xe0>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_udtSetPinValue+0xdc>
 25c:	80 95       	com	r24
 25e:	92 b3       	in	r25, 0x12	; 18
 260:	89 23       	and	r24, r25
 262:	82 bb       	out	0x12, r24	; 18
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	08 95       	ret
	unit8 u8Port,
	unit8 u8Pin,
	unit8 u8Value
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	08 95       	ret
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	08 95       	ret
 270:	81 e0       	ldi	r24, 0x01	; 1
		/*!Comment: DO nothing*/
	}
	
	return udtReturnType;
	
} 
 272:	08 95       	ret

00000274 <EXTI_voidInt0Init>:
void EXTI_voidInt0Init(void)
{
	
	#if EXTI_INT0_SENSE_MODE == FALLING_EDGE
	
	    CLR_BIT(MCUCR, ISC00);
 274:	85 b7       	in	r24, 0x35	; 53
 276:	8e 7f       	andi	r24, 0xFE	; 254
 278:	85 bf       	out	0x35, r24	; 53
		SET_BIT(MCUCR, ISC01);
 27a:	85 b7       	in	r24, 0x35	; 53
 27c:	82 60       	ori	r24, 0x02	; 2
 27e:	85 bf       	out	0x35, r24	; 53
	#error "Invalid sense mode configration"
	
	#endif
	
	/*ENABLE INTERRUPT ZERO*/
	SET_BIT(GICR, INT0);
 280:	8b b7       	in	r24, 0x3b	; 59
 282:	80 64       	ori	r24, 0x40	; 64
 284:	8b bf       	out	0x3b, r24	; 59
 286:	08 95       	ret

00000288 <GIE_voidEnable>:



void GIE_voidEnable(void)
{
	SET_BIT(SREG, I_BIT);
 288:	8f b7       	in	r24, 0x3f	; 63
 28a:	80 68       	ori	r24, 0x80	; 128
 28c:	8f bf       	out	0x3f, r24	; 63
 28e:	08 95       	ret

00000290 <main>:
#include "GIE_interface.h"
#include "EXTI_interface.h"
unit8 i=0;
int main(void)
{
	DIO_udtSetPinDirection(DIO_PORTD,DIO_PIN3,DIO_OUTPUT);
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	63 e0       	ldi	r22, 0x03	; 3
 294:	83 e0       	ldi	r24, 0x03	; 3
 296:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_udtSetPinDirection>
    EXTI_voidInt0Init();
 29a:	0e 94 3a 01 	call	0x274	; 0x274 <EXTI_voidInt0Init>
	GIE_voidEnable();
 29e:	0e 94 44 01 	call	0x288	; 0x288 <GIE_voidEnable>
 2a2:	ff cf       	rjmp	.-2      	; 0x2a2 <main+0x12>

000002a4 <__vector_1>:
}


void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
 2a4:	1f 92       	push	r1
 2a6:	0f 92       	push	r0
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	0f 92       	push	r0
 2ac:	11 24       	eor	r1, r1
 2ae:	2f 93       	push	r18
 2b0:	3f 93       	push	r19
 2b2:	4f 93       	push	r20
 2b4:	5f 93       	push	r21
 2b6:	6f 93       	push	r22
 2b8:	7f 93       	push	r23
 2ba:	8f 93       	push	r24
 2bc:	9f 93       	push	r25
 2be:	af 93       	push	r26
 2c0:	bf 93       	push	r27
 2c2:	ef 93       	push	r30
 2c4:	ff 93       	push	r31
	if(i==0)
 2c6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2ca:	81 11       	cpse	r24, r1
 2cc:	09 c0       	rjmp	.+18     	; 0x2e0 <__vector_1+0x3c>
	{
		DIO_udtSetPinValue(DIO_PORTD,DIO_PIN3,DIO_HIGH);
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	63 e0       	ldi	r22, 0x03	; 3
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	0e 94 bc 00 	call	0x178	; 0x178 <DIO_udtSetPinValue>
		i=1;
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 2de:	07 c0       	rjmp	.+14     	; 0x2ee <__vector_1+0x4a>
	}
	else
	{
		DIO_udtSetPinValue(DIO_PORTD,DIO_PIN3,DIO_LOW);
 2e0:	40 e0       	ldi	r20, 0x00	; 0
 2e2:	63 e0       	ldi	r22, 0x03	; 3
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	0e 94 bc 00 	call	0x178	; 0x178 <DIO_udtSetPinValue>
		i=0;
 2ea:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
	
 2ee:	ff 91       	pop	r31
 2f0:	ef 91       	pop	r30
 2f2:	bf 91       	pop	r27
 2f4:	af 91       	pop	r26
 2f6:	9f 91       	pop	r25
 2f8:	8f 91       	pop	r24
 2fa:	7f 91       	pop	r23
 2fc:	6f 91       	pop	r22
 2fe:	5f 91       	pop	r21
 300:	4f 91       	pop	r20
 302:	3f 91       	pop	r19
 304:	2f 91       	pop	r18
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <_exit>:
 310:	f8 94       	cli

00000312 <__stop_program>:
 312:	ff cf       	rjmp	.-2      	; 0x312 <__stop_program>
