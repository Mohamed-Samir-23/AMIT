
Lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000044e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e14  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000767  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000063b  00000000  00000000  00001b33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  00002170  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e7  00000000  00000000  00002294  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d47  00000000  00000000  0000277b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  000034c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 66 01 	call	0x2cc	; 0x2cc <main>
  64:	0c 94 25 02 	jmp	0x44a	; 0x44a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_udtSetPinDirection>:
	
	return udtReturnType;
	
	
	
}
  6c:	41 30       	cpi	r20, 0x01	; 1
  6e:	c1 f5       	brne	.+112    	; 0xe0 <DIO_udtSetPinDirection+0x74>
  70:	81 30       	cpi	r24, 0x01	; 1
  72:	91 f0       	breq	.+36     	; 0x98 <DIO_udtSetPinDirection+0x2c>
  74:	28 f0       	brcs	.+10     	; 0x80 <DIO_udtSetPinDirection+0x14>
  76:	82 30       	cpi	r24, 0x02	; 2
  78:	d9 f0       	breq	.+54     	; 0xb0 <DIO_udtSetPinDirection+0x44>
  7a:	83 30       	cpi	r24, 0x03	; 3
  7c:	29 f1       	breq	.+74     	; 0xc8 <DIO_udtSetPinDirection+0x5c>
  7e:	6e c0       	rjmp	.+220    	; 0x15c <DIO_udtSetPinDirection+0xf0>
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	02 c0       	rjmp	.+4      	; 0x8a <DIO_udtSetPinDirection+0x1e>
  86:	88 0f       	add	r24, r24
  88:	99 1f       	adc	r25, r25
  8a:	6a 95       	dec	r22
  8c:	e2 f7       	brpl	.-8      	; 0x86 <DIO_udtSetPinDirection+0x1a>
  8e:	9a b3       	in	r25, 0x1a	; 26
  90:	89 2b       	or	r24, r25
  92:	8a bb       	out	0x1a, r24	; 26
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	08 95       	ret
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_udtSetPinDirection+0x36>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_udtSetPinDirection+0x32>
  a6:	97 b3       	in	r25, 0x17	; 23
  a8:	89 2b       	or	r24, r25
  aa:	87 bb       	out	0x17, r24	; 23
  ac:	80 e0       	ldi	r24, 0x00	; 0
  ae:	08 95       	ret
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DIO_udtSetPinDirection+0x4e>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <DIO_udtSetPinDirection+0x4a>
  be:	94 b3       	in	r25, 0x14	; 20
  c0:	89 2b       	or	r24, r25
  c2:	84 bb       	out	0x14, r24	; 20
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	08 95       	ret
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_udtSetPinDirection+0x66>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_udtSetPinDirection+0x62>
  d6:	91 b3       	in	r25, 0x11	; 17
  d8:	89 2b       	or	r24, r25
  da:	81 bb       	out	0x11, r24	; 17
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	08 95       	ret
  e0:	41 11       	cpse	r20, r1
  e2:	3e c0       	rjmp	.+124    	; 0x160 <DIO_udtSetPinDirection+0xf4>
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	99 f0       	breq	.+38     	; 0x10e <DIO_udtSetPinDirection+0xa2>
  e8:	28 f0       	brcs	.+10     	; 0xf4 <DIO_udtSetPinDirection+0x88>
  ea:	82 30       	cpi	r24, 0x02	; 2
  ec:	e9 f0       	breq	.+58     	; 0x128 <DIO_udtSetPinDirection+0xbc>
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	41 f1       	breq	.+80     	; 0x142 <DIO_udtSetPinDirection+0xd6>
  f2:	38 c0       	rjmp	.+112    	; 0x164 <DIO_udtSetPinDirection+0xf8>
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_udtSetPinDirection+0x92>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_udtSetPinDirection+0x8e>
 102:	80 95       	com	r24
 104:	9a b3       	in	r25, 0x1a	; 26
 106:	89 23       	and	r24, r25
 108:	8a bb       	out	0x1a, r24	; 26
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	08 95       	ret
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_udtSetPinDirection+0xac>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_udtSetPinDirection+0xa8>
 11c:	80 95       	com	r24
 11e:	97 b3       	in	r25, 0x17	; 23
 120:	89 23       	and	r24, r25
 122:	87 bb       	out	0x17, r24	; 23
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	08 95       	ret
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_udtSetPinDirection+0xc6>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_udtSetPinDirection+0xc2>
 136:	80 95       	com	r24
 138:	94 b3       	in	r25, 0x14	; 20
 13a:	89 23       	and	r24, r25
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	08 95       	ret
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_udtSetPinDirection+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_udtSetPinDirection+0xdc>
 150:	80 95       	com	r24
 152:	91 b3       	in	r25, 0x11	; 17
 154:	89 23       	and	r24, r25
 156:	81 bb       	out	0x11, r24	; 17
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	08 95       	ret
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	08 95       	ret
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	08 95       	ret
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	08 95       	ret

00000168 <DIO_udtSetPinValue>:
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	c1 f5       	brne	.+112    	; 0x1dc <DIO_udtSetPinValue+0x74>
 16c:	81 30       	cpi	r24, 0x01	; 1
 16e:	91 f0       	breq	.+36     	; 0x194 <DIO_udtSetPinValue+0x2c>
 170:	28 f0       	brcs	.+10     	; 0x17c <DIO_udtSetPinValue+0x14>
 172:	82 30       	cpi	r24, 0x02	; 2
 174:	d9 f0       	breq	.+54     	; 0x1ac <DIO_udtSetPinValue+0x44>
 176:	83 30       	cpi	r24, 0x03	; 3
 178:	29 f1       	breq	.+74     	; 0x1c4 <DIO_udtSetPinValue+0x5c>
 17a:	6e c0       	rjmp	.+220    	; 0x258 <DIO_udtSetPinValue+0xf0>
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_udtSetPinValue+0x1e>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	6a 95       	dec	r22
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_udtSetPinValue+0x1a>
 18a:	9b b3       	in	r25, 0x1b	; 27
 18c:	89 2b       	or	r24, r25
 18e:	8b bb       	out	0x1b, r24	; 27
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	08 95       	ret
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_udtSetPinValue+0x36>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_udtSetPinValue+0x32>
 1a2:	98 b3       	in	r25, 0x18	; 24
 1a4:	89 2b       	or	r24, r25
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	08 95       	ret
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_udtSetPinValue+0x4e>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_udtSetPinValue+0x4a>
 1ba:	95 b3       	in	r25, 0x15	; 21
 1bc:	89 2b       	or	r24, r25
 1be:	85 bb       	out	0x15, r24	; 21
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	08 95       	ret
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_udtSetPinValue+0x66>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	6a 95       	dec	r22
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_udtSetPinValue+0x62>
 1d2:	92 b3       	in	r25, 0x12	; 18
 1d4:	89 2b       	or	r24, r25
 1d6:	82 bb       	out	0x12, r24	; 18
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	08 95       	ret
 1dc:	41 11       	cpse	r20, r1
 1de:	3e c0       	rjmp	.+124    	; 0x25c <DIO_udtSetPinValue+0xf4>
 1e0:	81 30       	cpi	r24, 0x01	; 1
 1e2:	99 f0       	breq	.+38     	; 0x20a <DIO_udtSetPinValue+0xa2>
 1e4:	28 f0       	brcs	.+10     	; 0x1f0 <DIO_udtSetPinValue+0x88>
 1e6:	82 30       	cpi	r24, 0x02	; 2
 1e8:	e9 f0       	breq	.+58     	; 0x224 <DIO_udtSetPinValue+0xbc>
 1ea:	83 30       	cpi	r24, 0x03	; 3
 1ec:	41 f1       	breq	.+80     	; 0x23e <DIO_udtSetPinValue+0xd6>
 1ee:	38 c0       	rjmp	.+112    	; 0x260 <DIO_udtSetPinValue+0xf8>
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_udtSetPinValue+0x92>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_udtSetPinValue+0x8e>
 1fe:	80 95       	com	r24
 200:	9b b3       	in	r25, 0x1b	; 27
 202:	89 23       	and	r24, r25
 204:	8b bb       	out	0x1b, r24	; 27
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	08 95       	ret
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_udtSetPinValue+0xac>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	6a 95       	dec	r22
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_udtSetPinValue+0xa8>
 218:	80 95       	com	r24
 21a:	98 b3       	in	r25, 0x18	; 24
 21c:	89 23       	and	r24, r25
 21e:	88 bb       	out	0x18, r24	; 24
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	08 95       	ret
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_udtSetPinValue+0xc6>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_udtSetPinValue+0xc2>
 232:	80 95       	com	r24
 234:	95 b3       	in	r25, 0x15	; 21
 236:	89 23       	and	r24, r25
 238:	85 bb       	out	0x15, r24	; 21
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	08 95       	ret
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_udtSetPinValue+0xe0>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_udtSetPinValue+0xdc>
 24c:	80 95       	com	r24
 24e:	92 b3       	in	r25, 0x12	; 18
 250:	89 23       	and	r24, r25
 252:	82 bb       	out	0x12, r24	; 18
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	08 95       	ret
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	08 95       	ret
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	08 95       	ret
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	08 95       	ret

00000264 <DIO_udtSetPortValue>:
 264:	81 30       	cpi	r24, 0x01	; 1
 266:	49 f0       	breq	.+18     	; 0x27a <DIO_udtSetPortValue+0x16>
 268:	28 f0       	brcs	.+10     	; 0x274 <DIO_udtSetPortValue+0x10>
 26a:	82 30       	cpi	r24, 0x02	; 2
 26c:	49 f0       	breq	.+18     	; 0x280 <DIO_udtSetPortValue+0x1c>
 26e:	83 30       	cpi	r24, 0x03	; 3
 270:	51 f0       	breq	.+20     	; 0x286 <DIO_udtSetPortValue+0x22>
 272:	0c c0       	rjmp	.+24     	; 0x28c <DIO_udtSetPortValue+0x28>
 274:	6b bb       	out	0x1b, r22	; 27
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	08 95       	ret
 27a:	68 bb       	out	0x18, r22	; 24
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	08 95       	ret
 280:	65 bb       	out	0x15, r22	; 21
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	08 95       	ret
 286:	62 bb       	out	0x12, r22	; 18
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	08 95       	ret
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	08 95       	ret

00000290 <DIO_udtReadPortValue>:
	unit8 u8Port,
	unit8* pu8Value
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
	switch(u8Port)
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	59 f0       	breq	.+22     	; 0x2aa <DIO_udtReadPortValue+0x1a>
 294:	28 f0       	brcs	.+10     	; 0x2a0 <DIO_udtReadPortValue+0x10>
 296:	82 30       	cpi	r24, 0x02	; 2
 298:	69 f0       	breq	.+26     	; 0x2b4 <DIO_udtReadPortValue+0x24>
 29a:	83 30       	cpi	r24, 0x03	; 3
 29c:	81 f0       	breq	.+32     	; 0x2be <DIO_udtReadPortValue+0x2e>
 29e:	14 c0       	rjmp	.+40     	; 0x2c8 <DIO_udtReadPortValue+0x38>
	{
		case DIO_PORTA:*pu8Value = DIO->PORTA;udtReturnType = E_OK;break;
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	fb 01       	movw	r30, r22
 2a4:	80 83       	st	Z, r24
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	08 95       	ret
		case DIO_PORTB:*pu8Value = DIO->PORTB;udtReturnType = E_OK;break;
 2aa:	88 b3       	in	r24, 0x18	; 24
 2ac:	fb 01       	movw	r30, r22
 2ae:	80 83       	st	Z, r24
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	08 95       	ret
		case DIO_PORTC:*pu8Value = DIO->PORTC;udtReturnType = E_OK;break;
 2b4:	85 b3       	in	r24, 0x15	; 21
 2b6:	fb 01       	movw	r30, r22
 2b8:	80 83       	st	Z, r24
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	08 95       	ret
		case DIO_PORTD:*pu8Value = DIO->PORTD;udtReturnType = E_OK;break;
 2be:	82 b3       	in	r24, 0x12	; 18
 2c0:	fb 01       	movw	r30, r22
 2c2:	80 83       	st	Z, r24
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	08 95       	ret
(
	unit8 u8Port,
	unit8* pu8Value
)
{
	Std_ReturnType udtReturnType=E_NOT_OK;
 2c8:	81 e0       	ldi	r24, 0x01	; 1
		case DIO_PORTD:*pu8Value = DIO->PORTD;udtReturnType = E_OK;break;
		default:/*!Comment: DO nothing*/break;
	}
	
	return udtReturnType;
 2ca:	08 95       	ret

000002cc <main>:
#include "STD_TYPES.h"
#include "SSD.h"
#include <util/delay.h>
int main(void)
{
	SSD_utdInit(SSD_ONE);
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <SSD_utdInit>
	SSD_utdInit(SSD_TWO);
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <SSD_utdInit>
    while (1) 
    {
		unit8 i =0;
		for(i=0;i<99;i++)
 2d8:	10 e0       	ldi	r17, 0x00	; 0
 2da:	0a c0       	rjmp	.+20     	; 0x2f0 <main+0x24>
		{
			unit16 t =50;
			while(t!=0)
			{
				SSD_utdDisplayTwoNum(i);
 2dc:	81 2f       	mov	r24, r17
 2de:	0e 94 fd 01 	call	0x3fa	; 0x3fa <SSD_utdDisplayTwoNum>
				t--;
 2e2:	21 97       	sbiw	r28, 0x01	; 1
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <main+0x1e>
 2e6:	c2 e3       	ldi	r28, 0x32	; 50
 2e8:	d0 e0       	ldi	r29, 0x00	; 0
    {
		unit8 i =0;
		for(i=0;i<99;i++)
		{
			unit16 t =50;
			while(t!=0)
 2ea:	20 97       	sbiw	r28, 0x00	; 0
 2ec:	b9 f7       	brne	.-18     	; 0x2dc <main+0x10>
	SSD_utdInit(SSD_ONE);
	SSD_utdInit(SSD_TWO);
    while (1) 
    {
		unit8 i =0;
		for(i=0;i<99;i++)
 2ee:	1f 5f       	subi	r17, 0xFF	; 255
 2f0:	13 36       	cpi	r17, 0x63	; 99
 2f2:	c8 f3       	brcs	.-14     	; 0x2e6 <main+0x1a>
 2f4:	f1 cf       	rjmp	.-30     	; 0x2d8 <main+0xc>

000002f6 <SSD_utdInit>:

Std_ReturnType SSD_utdInit
(
	unit8 u8SSD_num
)
{
 2f6:	cf 93       	push	r28
	
	Std_ReturnType udtReturnType=E_NOT_OK;
	switch(u8SSD_num)
 2f8:	81 30       	cpi	r24, 0x01	; 1
 2fa:	19 f0       	breq	.+6      	; 0x302 <SSD_utdInit+0xc>
 2fc:	82 30       	cpi	r24, 0x02	; 2
 2fe:	41 f0       	breq	.+16     	; 0x310 <SSD_utdInit+0x1a>
 300:	0e c0       	rjmp	.+28     	; 0x31e <SSD_utdInit+0x28>
	{
		case SSD_ONE:	DIO_udtSetPinDirection(DIO_PORTB,SSD_EN1,DIO_OUTPUT);udtReturnType=E_OK;break;				
 302:	41 e0       	ldi	r20, 0x01	; 1
 304:	61 e0       	ldi	r22, 0x01	; 1
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
 30c:	c0 e0       	ldi	r28, 0x00	; 0
 30e:	08 c0       	rjmp	.+16     	; 0x320 <SSD_utdInit+0x2a>
		case SSD_TWO:	DIO_udtSetPinDirection(DIO_PORTB,SSD_EN2,DIO_OUTPUT);udtReturnType=E_OK;break;
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	62 e0       	ldi	r22, 0x02	; 2
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
 31a:	c0 e0       	ldi	r28, 0x00	; 0
 31c:	01 c0       	rjmp	.+2      	; 0x320 <SSD_utdInit+0x2a>
		default :		udtReturnType=E_NOT_OK;break;
 31e:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(udtReturnType==E_OK)
 320:	c1 11       	cpse	r28, r1
 322:	15 c0       	rjmp	.+42     	; 0x34e <SSD_utdInit+0x58>
	{
		DIO_udtSetPinDirection(DIO_PORTA,SSD_A,DIO_OUTPUT);
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	64 e0       	ldi	r22, 0x04	; 4
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
		DIO_udtSetPinDirection(DIO_PORTA,SSD_B,DIO_OUTPUT);
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	65 e0       	ldi	r22, 0x05	; 5
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
		DIO_udtSetPinDirection(DIO_PORTA,SSD_C,DIO_OUTPUT);
 338:	41 e0       	ldi	r20, 0x01	; 1
 33a:	66 e0       	ldi	r22, 0x06	; 6
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
		DIO_udtSetPinDirection(DIO_PORTA,SSD_D,DIO_OUTPUT);
 342:	41 e0       	ldi	r20, 0x01	; 1
 344:	67 e0       	ldi	r22, 0x07	; 7
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_udtSetPinDirection>
 34c:	01 c0       	rjmp	.+2      	; 0x350 <SSD_utdInit+0x5a>
	}
	else
	{
		udtReturnType=E_NOT_OK;
 34e:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	return udtReturnType;
	
}
 350:	8c 2f       	mov	r24, r28
 352:	cf 91       	pop	r28
 354:	08 95       	ret

00000356 <SSD_utdDisplay>:
Std_ReturnType SSD_utdDisplay
(
	unit8 u8SSD_num,
	unit8 u8SSD_DisplayNum
)
{
 356:	1f 93       	push	r17
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	1f 92       	push	r1
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62
	Std_ReturnType udtReturnType=E_NOT_OK;
	unit8 u8halfport=0;
 362:	19 82       	std	Y+1, r1	; 0x01
	if(u8SSD_DisplayNum<=9)
 364:	6a 30       	cpi	r22, 0x0A	; 10
 366:	08 f0       	brcs	.+2      	; 0x36a <SSD_utdDisplay+0x14>
 368:	40 c0       	rjmp	.+128    	; 0x3ea <SSD_utdDisplay+0x94>
 36a:	16 2f       	mov	r17, r22
	{
		switch(u8SSD_num)
 36c:	81 30       	cpi	r24, 0x01	; 1
 36e:	19 f0       	breq	.+6      	; 0x376 <SSD_utdDisplay+0x20>
 370:	82 30       	cpi	r24, 0x02	; 2
 372:	f1 f0       	breq	.+60     	; 0x3b0 <SSD_utdDisplay+0x5a>
 374:	3c c0       	rjmp	.+120    	; 0x3ee <SSD_utdDisplay+0x98>
		{
			case SSD_ONE:	DIO_udtSetPinValue(DIO_PORTB,SSD_EN2,DIO_LOW);
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	62 e0       	ldi	r22, 0x02	; 2
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_udtSetPinValue>
							DIO_udtSetPinValue(DIO_PORTB,SSD_EN1,DIO_HIGH);
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_udtSetPinValue>
							DIO_udtReadPortValue(DIO_PORTA,&u8halfport);
 38a:	be 01       	movw	r22, r28
 38c:	6f 5f       	subi	r22, 0xFF	; 255
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	0e 94 48 01 	call	0x290	; 0x290 <DIO_udtReadPortValue>
							u8halfport=((u8SSD_DisplayNum<<4)|(u8halfport&0x0F));
 396:	80 e1       	ldi	r24, 0x10	; 16
 398:	18 9f       	mul	r17, r24
 39a:	b0 01       	movw	r22, r0
 39c:	11 24       	eor	r1, r1
 39e:	89 81       	ldd	r24, Y+1	; 0x01
 3a0:	8f 70       	andi	r24, 0x0F	; 15
 3a2:	68 2b       	or	r22, r24
 3a4:	69 83       	std	Y+1, r22	; 0x01
							DIO_udtSetPortValue(DIO_PORTA, u8halfport);
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	0e 94 32 01 	call	0x264	; 0x264 <DIO_udtSetPortValue>
							udtReturnType=E_OK;break;				
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	20 c0       	rjmp	.+64     	; 0x3f0 <SSD_utdDisplay+0x9a>
			case SSD_TWO:	DIO_udtSetPinValue(DIO_PORTB,SSD_EN1,DIO_LOW);
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	61 e0       	ldi	r22, 0x01	; 1
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_udtSetPinValue>
							DIO_udtSetPinValue(DIO_PORTB,SSD_EN2,DIO_HIGH);
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	62 e0       	ldi	r22, 0x02	; 2
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_udtSetPinValue>
							DIO_udtReadPortValue(DIO_PORTA,&u8halfport);
 3c4:	be 01       	movw	r22, r28
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	0e 94 48 01 	call	0x290	; 0x290 <DIO_udtReadPortValue>
							u8halfport=((u8SSD_DisplayNum<<4)|(u8halfport&0x0F));
 3d0:	80 e1       	ldi	r24, 0x10	; 16
 3d2:	18 9f       	mul	r17, r24
 3d4:	b0 01       	movw	r22, r0
 3d6:	11 24       	eor	r1, r1
 3d8:	89 81       	ldd	r24, Y+1	; 0x01
 3da:	8f 70       	andi	r24, 0x0F	; 15
 3dc:	68 2b       	or	r22, r24
 3de:	69 83       	std	Y+1, r22	; 0x01
							DIO_udtSetPortValue(DIO_PORTA, u8halfport);
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	0e 94 32 01 	call	0x264	; 0x264 <DIO_udtSetPortValue>
							udtReturnType=E_OK;break;
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <SSD_utdDisplay+0x9a>
		
	}
	else
	{
		
		udtReturnType=E_NOT_OK;
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	01 c0       	rjmp	.+2      	; 0x3f0 <SSD_utdDisplay+0x9a>
							DIO_udtSetPinValue(DIO_PORTB,SSD_EN2,DIO_HIGH);
							DIO_udtReadPortValue(DIO_PORTA,&u8halfport);
							u8halfport=((u8SSD_DisplayNum<<4)|(u8halfport&0x0F));
							DIO_udtSetPortValue(DIO_PORTA, u8halfport);
							udtReturnType=E_OK;break;
			default :		udtReturnType=E_NOT_OK;break;
 3ee:	81 e0       	ldi	r24, 0x01	; 1
		
	}
	
	return udtReturnType;
	
}
 3f0:	0f 90       	pop	r0
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	08 95       	ret

000003fa <SSD_utdDisplayTwoNum>:

Std_ReturnType SSD_utdDisplayTwoNum
(
	unit8 u8SSD_DisplayNum
)
{
 3fa:	cf 93       	push	r28
	Std_ReturnType udtReturnType=E_NOT_OK;
	if(u8SSD_DisplayNum<=99)
 3fc:	84 36       	cpi	r24, 0x64	; 100
 3fe:	10 f5       	brcc	.+68     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
	{
		
		SSD_utdDisplay(SSD_ONE,(unit8)(u8SSD_DisplayNum%10));
 400:	cd ec       	ldi	r28, 0xCD	; 205
 402:	8c 9f       	mul	r24, r28
 404:	c1 2d       	mov	r28, r1
 406:	11 24       	eor	r1, r1
 408:	c6 95       	lsr	r28
 40a:	c6 95       	lsr	r28
 40c:	c6 95       	lsr	r28
 40e:	2c 2f       	mov	r18, r28
 410:	22 0f       	add	r18, r18
 412:	92 2f       	mov	r25, r18
 414:	99 0f       	add	r25, r25
 416:	99 0f       	add	r25, r25
 418:	92 0f       	add	r25, r18
 41a:	68 2f       	mov	r22, r24
 41c:	69 1b       	sub	r22, r25
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	0e 94 ab 01 	call	0x356	; 0x356 <SSD_utdDisplay>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 424:	8f e3       	ldi	r24, 0x3F	; 63
 426:	9c e9       	ldi	r25, 0x9C	; 156
 428:	01 97       	sbiw	r24, 0x01	; 1
 42a:	f1 f7       	brne	.-4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 42c:	00 c0       	rjmp	.+0      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42e:	00 00       	nop
		_delay_ms(10);
		SSD_utdDisplay(SSD_TWO,(unit8)(u8SSD_DisplayNum/10));
 430:	6c 2f       	mov	r22, r28
 432:	82 e0       	ldi	r24, 0x02	; 2
 434:	0e 94 ab 01 	call	0x356	; 0x356 <SSD_utdDisplay>
 438:	8f e3       	ldi	r24, 0x3F	; 63
 43a:	9c e9       	ldi	r25, 0x9C	; 156
 43c:	01 97       	sbiw	r24, 0x01	; 1
 43e:	f1 f7       	brne	.-4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 440:	00 c0       	rjmp	.+0      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 442:	00 00       	nop
		udtReturnType=E_NOT_OK;
	}
	
	return udtReturnType;
	
}
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	cf 91       	pop	r28
 448:	08 95       	ret

0000044a <_exit>:
 44a:	f8 94       	cli

0000044c <__stop_program>:
 44c:	ff cf       	rjmp	.-2      	; 0x44c <__stop_program>
